apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kube-egress-gateway-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: gatewaylbconfigurations.egressgateway.kubernetes.azure.com
spec:
  group: egressgateway.kubernetes.azure.com
  names:
    kind: GatewayLBConfiguration
    listKind: GatewayLBConfigurationList
    plural: gatewaylbconfigurations
    singular: gatewaylbconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GatewayLBConfiguration is the Schema for the gatewaylbconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewayLBConfigurationSpec defines the desired state of GatewayLBConfiguration
            properties:
              gatewayNodepoolName:
                description: Name of the gateway nodepool to apply the gateway configuration.
                type: string
              gatewayVmssProfile:
                description: Profile of the gateway VMSS to apply the gateway configuration.
                properties:
                  publicIpPrefixSize:
                    description: Public IP prefix size to be applied to this VMSS.
                    format: int32
                    type: integer
                  vmssName:
                    description: Name of the VMSS
                    type: string
                  vmssResourceGroup:
                    description: Resource group of the VMSS. Must be in the same subscription.
                    type: string
                type: object
            type: object
          status:
            description: GatewayLBConfigurationStatus defines the observed state of
              GatewayLBConfiguration
            properties:
              frontendIP:
                description: Gateway IP for wireguard connection.
                type: string
              serverPort:
                description: Listening port of the gateway side wireguard daemon.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: gatewayvmconfigurations.egressgateway.kubernetes.azure.com
spec:
  group: egressgateway.kubernetes.azure.com
  names:
    kind: GatewayVMConfiguration
    listKind: GatewayVMConfigurationList
    plural: gatewayvmconfigurations
    singular: gatewayvmconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GatewayVMConfiguration is the Schema for the gatewayvmconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewayVMConfigurationSpec defines the desired state of GatewayVMConfiguration
            properties:
              gatewayNodepoolName:
                description: Name of the gateway nodepool to apply the gateway configuration.
                type: string
              gatewayVmssProfile:
                description: Profile of the gateway VMSS to apply the gateway configuration.
                properties:
                  publicIpPrefixSize:
                    description: Public IP prefix size to be applied to this VMSS.
                    format: int32
                    type: integer
                  vmssName:
                    description: Name of the VMSS
                    type: string
                  vmssResourceGroup:
                    description: Resource group of the VMSS. Must be in the same subscription.
                    type: string
                type: object
              publicIpPrefixId:
                description: BYO Resource ID of public IP prefix to be used as outbound.
                type: string
            type: object
          status:
            description: GatewayVMConfigurationStatus defines the observed state of
              GatewayVMConfiguration
            properties:
              egressIpPrefix:
                description: The egress source IP for traffic using this configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: podwireguardendpoints.egressgateway.kubernetes.azure.com
spec:
  group: egressgateway.kubernetes.azure.com
  names:
    kind: PodWireguardEndpoint
    listKind: PodWireguardEndpointList
    plural: podwireguardendpoints
    singular: podwireguardendpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodWireguardEndpoint is the Schema for the podwireguardendpoints
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodWireguardEndpointSpec defines the desired state of PodWireguardEndpoint
            properties:
              podIpAddress:
                description: IPv4 address assigned to the pod.
                type: string
              podWireguardPublicKey:
                description: wireguard public key on pod side.
                type: string
              staticGatewayConfiguration:
                description: Name of StaticGatewayConfiguration the pod uses.
                type: string
            type: object
          status:
            description: PodWireguardEndpointStatus defines the observed state of
              PodWireguardEndpoint
            properties:
              activeNodes:
                description: List of active nodes that have this pod wireguard peer
                  setup ready.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-egress-gateway-system/kube-egress-gateway-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  name: staticgatewayconfigurations.egressgateway.kubernetes.azure.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: kube-egress-gateway-webhook-service
          namespace: kube-egress-gateway-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: egressgateway.kubernetes.azure.com
  names:
    kind: StaticGatewayConfiguration
    listKind: StaticGatewayConfigurationList
    plural: staticgatewayconfigurations
    singular: staticgatewayconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StaticGatewayConfiguration is the Schema for the staticgatewayconfigurations
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StaticGatewayConfigurationSpec defines the desired state
              of StaticGatewayConfiguration
            properties:
              gatewayNodepoolName:
                description: Name of the gateway nodepool to apply the gateway configuration.
                type: string
              gatewayVmssProfile:
                description: Profile of the gateway VMSS to apply the gateway configuration.
                properties:
                  publicIpPrefixSize:
                    description: Public IP prefix size to be applied to this VMSS.
                    format: int32
                    type: integer
                  vmssName:
                    description: Name of the VMSS
                    type: string
                  vmssResourceGroup:
                    description: Resource group of the VMSS. Must be in the same subscription.
                    type: string
                type: object
              publicIpPrefixId:
                description: BYO Resource ID of public IP prefix to be used as outbound.
                type: string
            type: object
          status:
            description: StaticGatewayConfigurationStatus defines the observed state
              of StaticGatewayConfiguration
            properties:
              activeNodes:
                description: List of active nodes that have this gateway configuration
                  setup ready.
                items:
                  type: string
                type: array
              gatewayWireguardProfile:
                description: Gateway side wireguard profile.
                properties:
                  wireguardPrivateKeySecretRef:
                    description: Reference of the secret that holds gateway side wireguard
                      private key.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  wireguardPublicKey:
                    description: Gateway side wireguard public key.
                    type: string
                  wireguardServerIP:
                    description: Gateway IP for wireguard connection.
                    type: string
                  wireguardServerPort:
                    description: Listening port of the gateway side wireguard daemon.
                    format: int32
                    type: integer
                type: object
              message:
                description: Additional message (e.g. error) to explain the state.
                type: string
              publicIpPrefix:
                description: Public IP Prefix CIDR used for this gateway configuration.
                type: string
              state:
                description: State of the GatewayConfiguration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-egress-gateway-controller-manager
  namespace: kube-egress-gateway-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-egress-gateway-daemon-manager
  namespace: kube-egress-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-egress-gateway-leader-election-role
  namespace: kube-egress-gateway-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kube-egress-gateway-daemon-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - podwireguardendpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - podwireguardendpoints/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - staticgatewayconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - staticgatewayconfigurations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kube-egress-gateway-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewaylbconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewaylbconfigurations/finalizers
  verbs:
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewaylbconfigurations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewayvmconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewayvmconfigurations/finalizers
  verbs:
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - gatewayvmconfigurations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - staticgatewayconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - staticgatewayconfigurations/finalizers
  verbs:
  - update
- apiGroups:
  - egressgateway.kubernetes.azure.com
  resources:
  - staticgatewayconfigurations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-egress-gateway-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-egress-gateway-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-egress-gateway-leader-election-rolebinding
  namespace: kube-egress-gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-egress-gateway-leader-election-role
subjects:
- kind: ServiceAccount
  name: kube-egress-gateway-controller-manager
  namespace: kube-egress-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-egress-gateway-daemon-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-egress-gateway-daemon-manager-role
subjects:
- kind: ServiceAccount
  name: kube-egress-gateway-daemon-manager
  namespace: kube-egress-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-egress-gateway-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-egress-gateway-manager-role
subjects:
- kind: ServiceAccount
  name: kube-egress-gateway-controller-manager
  namespace: kube-egress-gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-egress-gateway-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-egress-gateway-proxy-role
subjects:
- kind: ServiceAccount
  name: kube-egress-gateway-controller-manager
  namespace: kube-egress-gateway-system
---
apiVersion: v1
data:
  azure.json: |-
    {
      "cloud": "AzurePublicCloud",
      "tenantId": "<tenant-id>",
      "subscriptionId": "<subscription-id>",
      "aadClientId": "<client-id>",
      "aadClientSecret": "<client-secret>",
      "resourceGroup": "<resource-group-name>",
      "location": "<location>",
      "vmType": "<vm-type>",
      "subnetName": "<subnet-name>",
      "securityGroupName": "<security-group-name>",
      "vnetName": "<vnet-name>",
      "vnetResourceGroup": "<vnet-resource-group>",
      "routeTableName": "<route-table-name>",
      "primaryAvailabilitySetName": "<primary-as-name>",
      "primaryScaleSetName": "<primary-ss-name>",
      "cloudProviderBackoff": true,
      "cloudProviderBackoffRetries": 6,
      "cloudProviderBackoffExponent": 1.5,
      "cloudProviderBackoffDuration": 5,
      "cloudProviderBackoffJitter": 1,
      "cloudProviderRatelimit": true,
      "cloudProviderRateLimitQPS": 6,
      "cloudProviderRateLimitBucket": 20,
      "useManagedIdentityExtension": false,
      "userAssignedIdentityID": "",
      "useInstanceMetadata": true,
      "loadBalancerSku": "<loadbalancer-sku>",
      "excludeMasterFromStandardLB": false,
      "maximumLoadBalancerRuleCount": 250,
      "enableMultipleStandardLoadBalancers": false,
      "tags": "a=b,c=d"
    }
kind: ConfigMap
metadata:
  name: kube-egress-gateway-daemon-cloud-config-t2bktfdm22
  namespace: kube-egress-gateway-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 0a299682.microsoft.com
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: kube-egress-gateway-manager-config
  namespace: kube-egress-gateway-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kube-egress-gateway-controller-manager-metrics-service
  namespace: kube-egress-gateway-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: kube-egress-gateway-webhook-service
  namespace: kube-egress-gateway-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kube-egress-gateway-controller-manager
  namespace: kube-egress-gateway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --config=controller_manager_config.yaml
        command:
        - /kube-egress-gateway-controller
        image: jwtty0919/kube-egress-gateway-controller:b33340b
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kube-egress-gateway-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: kube-egress-gateway-manager-config
        name: manager-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    control-plane: daemon-manager
  name: kube-egress-gateway-daemon-manager
  namespace: kube-egress-gateway-system
spec:
  selector:
    matchLabels:
      control-plane: daemon-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: daemon
      labels:
        control-plane: daemon-manager
    spec:
      containers:
      - args:
        - --cloud-config=/etc/config/azure.json
        command:
        - /kube-egress-gateway-daemon
        image: daemon:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: daemon
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/config
          name: daemon-config-volume
        - mountPath: /proc
          mountPropagation: Bidirectional
          name: hostpath-proc
        - mountPath: /run
          mountPropagation: Bidirectional
          name: hostpath-run
        - mountPath: /var
          mountPropagation: Bidirectional
          name: hostpath-var
      hostNetwork: true
      hostPID: true
      nodeSelector:
        todo.kubernetes.azure.com/mode: Gateway
      serviceAccountName: kube-egress-gateway-daemon-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: mode
        operator: Equal
        value: gateway
      volumes:
      - configMap:
          name: kube-egress-gateway-daemon-cloud-config-t2bktfdm22
        name: daemon-config-volume
      - hostPath:
          path: /proc
        name: hostpath-proc
      - hostPath:
          path: /run
        name: hostpath-run
      - hostPath:
          path: /var
        name: hostpath-var
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kube-egress-gateway-serving-cert
  namespace: kube-egress-gateway-system
spec:
  dnsNames:
  - kube-egress-gateway-webhook-service.kube-egress-gateway-system.svc
  - kube-egress-gateway-webhook-service.kube-egress-gateway-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kube-egress-gateway-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kube-egress-gateway-selfsigned-issuer
  namespace: kube-egress-gateway-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-egress-gateway-system/kube-egress-gateway-serving-cert
  name: kube-egress-gateway-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kube-egress-gateway-webhook-service
      namespace: kube-egress-gateway-system
      path: /mutate-kube-egress-gateway-microsoft-com-v1alpha1-staticgatewayconfiguration
  failurePolicy: Fail
  name: mstaticgatewayconfiguration.kb.io
  rules:
  - apiGroups:
    - egressgateway.kubernetes.azure.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - staticgatewayconfigurations
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-egress-gateway-system/kube-egress-gateway-serving-cert
  name: kube-egress-gateway-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kube-egress-gateway-webhook-service
      namespace: kube-egress-gateway-system
      path: /validate-kube-egress-gateway-microsoft-com-v1alpha1-staticgatewayconfiguration
  failurePolicy: Fail
  name: vstaticgatewayconfiguration.kb.io
  rules:
  - apiGroups:
    - egressgateway.kubernetes.azure.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - staticgatewayconfigurations
  sideEffects: None
