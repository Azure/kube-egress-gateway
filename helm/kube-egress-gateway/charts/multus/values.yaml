# Copyright 2020 K8s Network Plumbing Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for multus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#replicaCount: 1

image:
  repository: ghcr.io/k8snetworkplumbingwg/multus-cni
  tag: snapshot-thick
  pullPolicy: IfNotPresent

#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  #create: true
  # Annotations to add to the service account
  #annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: multus

pod:
  resources:
    enabled: false
    multus:
      requests:
        memory: "50Mi"
        cpu: "100m"
      limits:
        memory: "50Mi"
        cpu: "100m"

#podSecurityContext: {}
  # fsGroup: 2000

#securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

#service:
  #type: ClusterIP
  #port: 80

#ingress:
  #enabled: false
  #annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  #hosts:
    #- host: chart-example.local
    #  paths: []
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

labels:
  nodeSelector: 
    kubernetes.io/arch: amd64
    kubernetes.io/os: linux

config:
  cni_conf:
    chrootDir: /hostroot
    confDir: /host/etc/cni/net.d
    logToStderr: true
    logLevel: debug
    logFile: /tmp/multus.log
    binDir: /opt/cni/bin
    cniDir: /var/lib/cni/multus
    socketDir: /host/run/multus/

manifests:
  serviceAccount: true
  clusterRole: true
  clusterRoleBinding: true
  configMap: true
  daemonSet: true
  customResourceDefinition: true

#tolerations: []

#affinity: {}
