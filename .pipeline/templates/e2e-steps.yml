parameters:
- name: goVersion
  type: string
  default: '1.24.3'
- name: podCidr
  type: string
  default: '10.244.0.0/16'
- name: serviceCidr
  type: string
  default: '10.245.0.0/16'
- name: kubeconfigFile
  type: string
  default: 'e2e-kubeconfig'
- name: networkPlugin
  type: string
  default: 'overlay'

steps:
- task: GoTool@0
  inputs:
    version: ${{ parameters.goVersion }}

- bash: |
    echo $(registry.password) | docker login $(registry.url) -u $(registry.username) --password-stdin
  displayName: docker login

- bash: |
    az extension add -n aks-preview --version 14.0.0b1
    az extension list
    az login --identity --resource-id $(AZURE_MANAGED_IDENTITY_CLIENT_ID)
    az account set -s $(AZURE_SUBSCRIPTION_ID)
  displayName: az login

- bash: |
    docker buildx create --name multi-arch-builder --bootstrap --use --driver docker-container --driver-opt image=mcr.microsoft.com/oss/moby/buildkit:0.11.6-2
    docker buildx ls
  displayName: create docker builder

- bash: |
    export RESOURCE_GROUP="pod-egress-e2e-$(head /dev/urandom | LC_ALL=C tr -dc a-z0-9 | head -c 6 ; echo '')"
    echo "##vso[task.setvariable variable=resource_group]${RESOURCE_GROUP}"
    NETWORK_PLUGIN=${{ parameters.networkPlugin }} \
      KUBECONFIG_FILE=${{ parameters.kubeconfigFile }} \
      POD_CIDR=${{ parameters.podCidr }} \
      SERVICE_CIDR=${{ parameters.serviceCidr }} \
      .pipeline/scripts/deploy-testenv.sh
    export KUBECONFIG=$(pwd)/${{ parameters.kubeconfigFile }}
    echo "##vso[task.setvariable variable=kubeconfig]${KUBECONFIG}"
    kubectl get nodes
  displayName: create aks cluster
  env:
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    AZURE_TENANT_ID: $(AZURE_TENANT_ID)

- bash: |
    set -euo pipefail
    mv $(pwd)/azure.json $(pwd)/config/azureconfig/azure.json
    echo EXCEPTION_CIDRS=${{ parameters.podCidr }}","${{ parameters.serviceCidr }} > $(pwd)/config/environment_variables/environment.env
    IMAGE_REGISTRY=$(registry.url) E2E_PIPELINE=true make install
    kubectl wait --for=condition=ready pod -A -l app=kube-egress-gateway --timeout=300s
    kubectl get all -n kube-egress-gateway-system
  displayName: build and install kube-egress-gateway components
  env:
    KUBECONFIG: $(kubeconfig)

- bash: |
    set -euo pipefail
    mkdir ${ARTIFACT_DIR}/logs
    export LOG_DIR=${ARTIFACT_DIR}/logs
    make e2e-test
  displayName: run e2e tests
  env:
    KUBECONFIG: $(kubeconfig)
    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
    AZURE_TENANT_ID: $(AZURE_TENANT_ID)
    AZURE_MANAGED_IDENTITY_CLIENT_ID: $(AZURE_MANAGED_IDENTITY_CLIENT_ID)
    COLLECT_LOG: true
    ARTIFACT_DIR: $(Build.ArtifactStagingDirectory)

- bash: |
    [ "$(az group exists -n $(resource_group))" == "true" ] && az group delete -n $(resource_group) --yes --no-wait
  displayName: clean up resources
  condition: always()

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: Logs
  condition: succeededOrFailed()
