name: Build

# Controls when the workflow will run
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      actions: read
      contents: read
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: daemon # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azure/kube-egress-gateway-daemon
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
          bake-target: daemon-tags
      - name: Docker meta
        id: controller # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azure/kube-egress-gateway-controller
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
          bake-target: controller-tags
      - name: Docker meta
        id: cnimanager # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azure/kube-egress-gateway-cnimanager
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
          bake-target: cnimanager-tags
      - name: Docker meta
        id: cniplugin # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/azure/kube-egress-gateway-cni
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
          bake-target: cni-tags
      - name: Build and push
        uses: docker/bake-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          files: |
            docker-bake.hcl
            ${{ steps.daemon.outputs.bake-file }}
            ${{ steps.controller.outputs.bake-file }}
            ${{ steps.cnimanager.outputs.bake-file }}
            ${{ steps.cniplugin.outputs.bake-file }}
