name: Build And Publish to MCR

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*.*.*'

env:
  # `public` indicates images to MCR wil be publicly available, and will be removed in the final MCR images
  REGISTRY_REPO: public/aks

jobs:
  build:
    runs-on:
      labels: [self-hosted, "1ES.Pool=1es-aks-kube-egress-gateway-pool-ubuntu"]
    permissions:
      packages: write
      actions: read
      contents: read
      id-token: write
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login the ACR
        run: |
          az login --identity
          az acr login -n ${{ secrets.AZURE_REGISTRY }}
      - name: Docker meta
        id: daemon # you'll use this in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO }}/kube-egress-gateway-daemon
          tags: |
            type=semver,pattern={{raw}}
          bake-target: daemon-tags
      - name: Docker meta
        id: controller # you'll use this in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO }}/kube-egress-gateway-controller
          tags: |
            type=semver,pattern={{raw}}
          bake-target: controller-tags
      - name: Docker meta
        id: cnimanager # you'll use this in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO }}/kube-egress-gateway-cnimanager
          tags: |
            type=semver,pattern={{raw}}
          bake-target: cnimanager-tags
      - name: Docker meta
        id: cniplugin # you'll use this in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO }}/kube-egress-gateway-cni
          tags: |
            type=semver,pattern={{raw}}
          bake-target: cni-tags
      - name: Docker meta
        id: cniipamplugin # you'll use this in the next step
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO }}/kube-egress-gateway-cni-ipam
          tags: |
            type=semver,pattern={{raw}}
          bake-target: cni-ipam-tags
      - name: Set platform env for release
        run: |
          echo "TARGET_PLATFORMS=linux/amd64,linux/arm64,linux/arm" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/bake-action@v4
        env:
          PLATFORMS: ${{env.TARGET_PLATFORMS}}
        with:
          push: true
          files: |
            docker/docker-bake.hcl
            ${{ steps.daemon.outputs.bake-file }}
            ${{ steps.controller.outputs.bake-file }}
            ${{ steps.cnimanager.outputs.bake-file }}
            ${{ steps.cniplugin.outputs.bake-file }}
            ${{ steps.cniipamplugin.outputs.bake-file }}

